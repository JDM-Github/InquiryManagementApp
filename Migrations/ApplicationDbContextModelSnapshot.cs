// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InquiryManagementApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InquiryManagementApp.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("InquiryManagementApp.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedEnrolled")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FatherFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherOccupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FeePaid")
                        .HasColumnType("float");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoodMoralCertificate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HaveSiblingInSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWalkin")
                        .HasColumnType("bit");

                    b.Property<string>("LRN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Middlename")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MotherFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherMaidenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherOccupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSibling")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TemporaryPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemporaryUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnrollmentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("InquiryManagementApp.Models.EnrollmentSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EnrollmentSchedules");
                });

            modelBuilder.Entity("InquiryManagementApp.Models.FeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Fee")
                        .HasColumnType("float");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fee = 19000.0,
                            Level = "NURSERY",
                            PaymentType = "Cash"
                        },
                        new
                        {
                            Id = 2,
                            Fee = 19000.0,
                            Level = "KINDER",
                            PaymentType = "Cash"
                        },
                        new
                        {
                            Id = 3,
                            Fee = 19000.0,
                            Level = "ELEMENTARY",
                            PaymentType = "Cash"
                        },
                        new
                        {
                            Id = 4,
                            Fee = 19000.0,
                            Level = "JUNIOR HIGH SCHOOL",
                            PaymentType = "Installment"
                        },
                        new
                        {
                            Id = 5,
                            Fee = 19000.0,
                            Level = "SENIOR HIGH SCHOOL 11 ABM (1ST SEM)",
                            PaymentType = "Installment"
                        },
                        new
                        {
                            Id = 6,
                            Fee = 19000.0,
                            Level = "SENIOR HIGH SCHOOL 11 ABM (2ND SEM)",
                            PaymentType = "Installment"
                        },
                        new
                        {
                            Id = 7,
                            Fee = 19000.0,
                            Level = "SENIOR HIGH SCHOOL 12 ABM (1ST SEM)",
                            PaymentType = "Installment"
                        },
                        new
                        {
                            Id = 8,
                            Fee = 19000.0,
                            Level = "SENIOR HIGH SCHOOL 12 ABM (2ND SEM)",
                            PaymentType = "Installment"
                        },
                        new
                        {
                            Id = 9,
                            Fee = 19000.0,
                            Level = "SENIOR HIGH SCHOOL 11 HUMSS (1ST SEM)",
                            PaymentType = "Installment"
                        },
                        new
                        {
                            Id = 10,
                            Fee = 19000.0,
                            Level = "SENIOR HIGH SCHOOL 11 HUMSS (2ND SEM)",
                            PaymentType = "Installment"
                        },
                        new
                        {
                            Id = 11,
                            Fee = 19000.0,
                            Level = "SENIOR HIGH SCHOOL 12 HUMSS (1ST SEM)",
                            PaymentType = "Installment"
                        },
                        new
                        {
                            Id = 12,
                            Fee = 19000.0,
                            Level = "SENIOR HIGH SCHOOL 12 HUMSS (2ND SEM)",
                            PaymentType = "Installment"
                        });
                });

            modelBuilder.Entity("InquiryManagementApp.Models.Inquiry", b =>
                {
                    b.Property<int>("InquiryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InquiryId"));

                    b.Property<string>("CancellationNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CancellationReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GuardianName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceOfInformation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("InquiryId");

                    b.ToTable("Inquiries");
                });

            modelBuilder.Entity("InquiryManagementApp.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("InquiryManagementApp.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnrollreesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("PaidAmount")
                        .HasColumnType("float");

                    b.Property<string>("PaymentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("InquiryManagementApp.Models.PaymentSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CurrentPaymentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.PrimitiveCollection<string>("PaymentIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PaymentSchedules");
                });

            modelBuilder.Entity("InquiryManagementApp.Models.RecentActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RecentActivities");
                });

            modelBuilder.Entity("InquiryManagementApp.Models.Requirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<string>("RequirementName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadedFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Requirements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A valid copy of the Birth Certificate.",
                            GradeLevel = "NURSERY",
                            IsRequired = true,
                            RequirementName = "Birth Certificate",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 2,
                            Description = "Last year’s report card.",
                            GradeLevel = "KINDER",
                            IsRequired = true,
                            RequirementName = "Report Card",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 3,
                            Description = "A valid copy of the Birth Certificate.",
                            GradeLevel = "KINDER",
                            IsRequired = true,
                            RequirementName = "Birth Certificate",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 4,
                            Description = "A current medical certificate.",
                            GradeLevel = "ELEMENTARY",
                            IsRequired = true,
                            RequirementName = "Medical Certificate",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 5,
                            Description = "Last year’s report card.",
                            GradeLevel = "ELEMENTARY",
                            IsRequired = true,
                            RequirementName = "Report Card",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 6,
                            Description = "A valid PSA-certified Birth Certificate.",
                            GradeLevel = "ELEMENTARY",
                            IsRequired = true,
                            RequirementName = "PSA Birth Certificate",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 7,
                            Description = "Form 138 (Report Card) for the last grade level.",
                            GradeLevel = "JUNIOR HIGH SCHOOL",
                            IsRequired = true,
                            RequirementName = "Form 138 (Report Card)",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 8,
                            Description = "A valid PSA-certified Birth Certificate.",
                            GradeLevel = "JUNIOR HIGH SCHOOL",
                            IsRequired = true,
                            RequirementName = "PSA Birth Certificate",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 9,
                            Description = "Certificate of Good Moral Character from previous school.",
                            GradeLevel = "JUNIOR HIGH SCHOOL",
                            IsRequired = true,
                            RequirementName = "Certificate of Good Moral",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 10,
                            Description = "Form 137 or the Grade 10 Report Card.",
                            GradeLevel = "SENIOR HIGH SCHOOL 11 ABM (1ST SEM)",
                            IsRequired = true,
                            RequirementName = "Form 137 (Grade 10 Report Card)",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 11,
                            Description = "A valid PSA-certified Birth Certificate.",
                            GradeLevel = "SENIOR HIGH SCHOOL 11 ABM (1ST SEM)",
                            IsRequired = true,
                            RequirementName = "PSA Birth Certificate",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 12,
                            Description = "Certificate of Good Moral Character from previous school.",
                            GradeLevel = "SENIOR HIGH SCHOOL 11 ABM (1ST SEM)",
                            IsRequired = true,
                            RequirementName = "Certificate of Good Moral",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 13,
                            Description = "Form 137 or the Grade 10 Report Card.",
                            GradeLevel = "SENIOR HIGH SCHOOL 11 ABM (2ND SEM)",
                            IsRequired = true,
                            RequirementName = "Form 137 (Grade 10 Report Card)",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 14,
                            Description = "A valid PSA-certified Birth Certificate.",
                            GradeLevel = "SENIOR HIGH SCHOOL 11 ABM (2ND SEM)",
                            IsRequired = true,
                            RequirementName = "PSA Birth Certificate",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 15,
                            Description = "Certificate of Good Moral Character from previous school.",
                            GradeLevel = "SENIOR HIGH SCHOOL 11 ABM (2ND SEM)",
                            IsRequired = true,
                            RequirementName = "Certificate of Good Moral",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 16,
                            Description = "Form 137 or the Grade 11 Report Card.",
                            GradeLevel = "SENIOR HIGH SCHOOL 12 ABM (1ST SEM)",
                            IsRequired = true,
                            RequirementName = "Form 137 (Grade 11 Report Card)",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 17,
                            Description = "A valid PSA-certified Birth Certificate.",
                            GradeLevel = "SENIOR HIGH SCHOOL 12 ABM (1ST SEM)",
                            IsRequired = true,
                            RequirementName = "PSA Birth Certificate",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 18,
                            Description = "Certificate of Good Moral Character from previous school.",
                            GradeLevel = "SENIOR HIGH SCHOOL 12 ABM (1ST SEM)",
                            IsRequired = true,
                            RequirementName = "Certificate of Good Moral",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 19,
                            Description = "Form 137 or the Grade 11 Report Card.",
                            GradeLevel = "SENIOR HIGH SCHOOL 12 ABM (2ND SEM)",
                            IsRequired = true,
                            RequirementName = "Form 137 (Grade 11 Report Card)",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 20,
                            Description = "A valid PSA-certified Birth Certificate.",
                            GradeLevel = "SENIOR HIGH SCHOOL 12 ABM (2ND SEM)",
                            IsRequired = true,
                            RequirementName = "PSA Birth Certificate",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 21,
                            Description = "Certificate of Good Moral Character from previous school.",
                            GradeLevel = "SENIOR HIGH SCHOOL 12 ABM (2ND SEM)",
                            IsRequired = true,
                            RequirementName = "Certificate of Good Moral",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 22,
                            Description = "Form 137 or the Grade 10 Report Card.",
                            GradeLevel = "SENIOR HIGH SCHOOL 11 HUMSS (1ST SEM)",
                            IsRequired = true,
                            RequirementName = "Form 137 (Grade 10 Report Card)",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 23,
                            Description = "A valid PSA-certified Birth Certificate.",
                            GradeLevel = "SENIOR HIGH SCHOOL 11 HUMSS (1ST SEM)",
                            IsRequired = true,
                            RequirementName = "PSA Birth Certificate",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 24,
                            Description = "Certificate of Good Moral Character from previous school.",
                            GradeLevel = "SENIOR HIGH SCHOOL 11 HUMSS (1ST SEM)",
                            IsRequired = true,
                            RequirementName = "Certificate of Good Moral",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 25,
                            Description = "Form 137 or the Grade 10 Report Card.",
                            GradeLevel = "SENIOR HIGH SCHOOL 11 HUMSS (2ND SEM)",
                            IsRequired = true,
                            RequirementName = "Form 137 (Grade 10 Report Card)",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 26,
                            Description = "A valid PSA-certified Birth Certificate.",
                            GradeLevel = "SENIOR HIGH SCHOOL 11 HUMSS (2ND SEM)",
                            IsRequired = true,
                            RequirementName = "PSA Birth Certificate",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 27,
                            Description = "Certificate of Good Moral Character from previous school.",
                            GradeLevel = "SENIOR HIGH SCHOOL 11 HUMSS (2ND SEM)",
                            IsRequired = true,
                            RequirementName = "Certificate of Good Moral",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 28,
                            Description = "Form 137 or the Grade 11 Report Card.",
                            GradeLevel = "SENIOR HIGH SCHOOL 12 HUMSS (1ST SEM)",
                            IsRequired = true,
                            RequirementName = "Form 137 (Grade 11 Report Card)",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 29,
                            Description = "A valid PSA-certified Birth Certificate.",
                            GradeLevel = "SENIOR HIGH SCHOOL 12 HUMSS (1ST SEM)",
                            IsRequired = true,
                            RequirementName = "PSA Birth Certificate",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 30,
                            Description = "Certificate of Good Moral Character from previous school.",
                            GradeLevel = "SENIOR HIGH SCHOOL 12 HUMSS (1ST SEM)",
                            IsRequired = true,
                            RequirementName = "Certificate of Good Moral",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 31,
                            Description = "Form 137 or the Grade 11 Report Card.",
                            GradeLevel = "SENIOR HIGH SCHOOL 12 HUMSS (2ND SEM)",
                            IsRequired = true,
                            RequirementName = "Form 137 (Grade 11 Report Card)",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 32,
                            Description = "A valid PSA-certified Birth Certificate.",
                            GradeLevel = "SENIOR HIGH SCHOOL 12 HUMSS (2ND SEM)",
                            IsRequired = true,
                            RequirementName = "PSA Birth Certificate",
                            UploadedFile = ""
                        },
                        new
                        {
                            Id = 33,
                            Description = "Certificate of Good Moral Character from previous school.",
                            GradeLevel = "SENIOR HIGH SCHOOL 12 HUMSS (2ND SEM)",
                            IsRequired = true,
                            RequirementName = "Certificate of Good Moral",
                            UploadedFile = ""
                        });
                });

            modelBuilder.Entity("InquiryManagementApp.Models.RequirementModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnrollmentId")
                        .HasColumnType("int");

                    b.Property<string>("GradeLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<string>("RequirementName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadedFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnrollmentId");

                    b.ToTable("RequirementModels");
                });

            modelBuilder.Entity("InquiryManagementApp.Models.RequirementModel", b =>
                {
                    b.HasOne("InquiryManagementApp.Models.Enrollment", "Enrollment")
                        .WithMany()
                        .HasForeignKey("EnrollmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollment");
                });
#pragma warning restore 612, 618
        }
    }
}
