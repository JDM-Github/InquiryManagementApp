@model IEnumerable<InquiryManagementApp.Models.Enrollment>

@{
    ViewData["Title"] = "Enrolled Students";
}
<div class="container-fluid mt-4 d-flex gap-3"
    style="margin-top: 65px !important; margin-bottom: 10px; min-height: 90vh;">
    @await Html.PartialAsync("Layout/Navigation")

    <div class="card shadow-lg border-0 rounded-3 mt-2 w-100">
        <div class="card-header d-flex align-items-center justify-content-between"
            style="border-left: 4px solid #FFD700; background-color: #f8f9fa;">
            <h2 class="mb-0" style="font-size: 1.5rem; font-weight: bold; color: #007bff; padding-left: 15px;">
                MANAGE ENROLLEES</h2>

            <div class="d-flex gap-2 w-50">
                <select class="form-control" id="grade-level-filter">
                    <option value="">Select Grade Level</option>
                    @foreach (var gradeLevel in new[] { "NURSERY", "KINDER", "ELEMENTARY GRADE 1", "ELEMENTARY GRADE 2", "ELEMENTARY GRADE 3", "ELEMENTARY GRADE 4", "ELEMENTARY GRADE 5", "ELEMENTARY GRADE 6", "JUNIOR HIGH SCHOOL GRADE 7", 
                    "JUNIOR HIGH SCHOOL GRADE 8", "JUNIOR HIGH SCHOOL GRADE 9", "JUNIOR HIGH SCHOOL GRADE 10", "SENIOR HIGH SCHOOL - 11 ABM", "SENIOR HIGH SCHOOL - 11 HUMSS", "SENIOR HIGH SCHOOL - 12 ABM", "SENIOR HIGH SCHOOL - 12 HUMSS" })
                    {
                        <option value="@gradeLevel">@gradeLevel</option>
                    }
                </select>

                <select class="form-control" id="status-filter">
                    <option value="">Select Status</option>
                    <option value="Approved">Approved</option>
                    <option value="Pending">Pending</option>
                    <option value="Rejected">Rejected</option>
                </select>
            </div>
        </div>
            
        <div class="card-body">
            <div class="d-flex gap-2">
                <input 
                    type="text" 
                    class="form-control w-100 mb-2 shadow-sm" 
                    placeholder="Search..."
                    style="border-radius: 5px; font-size: 0.9rem;" />
                <button 
                    type="button" 
                    class="btn btn-primary shadow-sm mb-2" 
                    style="font-size: 0.9rem; border-radius: 5px;">
                    Search
                </button>
            </div>
            <table class="table table-striped table-bordered table-hover w-100">
                <thead style="background-color: yellow;">
                    <tr style="font-size: 0.9rem !important;">
                        <th scope="col">ID</th>
                        <th scope="col">NAME</th>
                        <th scope="col">GRADE LEVEL</th>
                        <th scope="col">DOB</th>
                        <th scope="col">LRN</th>
                        <th scope="col">SUBMISSION DATE</th>
                        <th scope="col">STATUS</th>
                        <th scope="col">ACTIONS</th>
                    </tr>
                </thead>
                <tbody id="enrollment-table-body">
                    @if (Model == null || !Model.Any())
                    {
                        <tr>
                            <td colspan="8" class="text-center text-muted">
                                No enrollment data available.
                            </td>
                        </tr>
                    }
                    else {
                        foreach (var enrollment in Model)
                        {
                            <tr>
                                <td>@enrollment.EnrollmentId</td>
                                <td>@enrollment.Surname, @enrollment.Firstname</td>
                                <td>@enrollment.GradeLevel</td>
                                <td>@enrollment.DateOfBirth.ToString("MMMM dd, yyyy")</td>
                                <td>@enrollment.LRN</td>
                                <td>@enrollment.SubmissionDate.ToString("MMMM dd, yyyy")</td>
                                <td>@(enrollment.IsApproved ? "Approved" : "Pending")</td>
                                <td>
                                    <a class="btn btn-info btn-sm" href="@Url.Action("ViewAccount", "Home", new { userId = enrollment.LRN })">Details</a>
                                    @if (!enrollment.IsApproved)
                                    {
                                        <form asp-controller="Admin" asp-action="Approve" method="post" style="display:inline;">
                                            <input type="hidden" name="id" value="@enrollment.EnrollmentId" />
                                            <button type="submit" class="btn btn-warning btn-sm">Approve</button>
                                        </form>
                                        <form asp-controller="Admin" asp-action="Reject" method="post" style="display:inline;">
                                            <input type="hidden" name="id" value="@enrollment.EnrollmentId" />
                                            <button type="submit" class="btn btn-warning btn-sm">Reject</button>
                                        </form>
                                    }
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        document.getElementById('grade-level-filter').addEventListener('change', filterTable);
        document.getElementById('status-filter').addEventListener('change', filterTable);
        document.getElementById('search-input').addEventListener('input', filterTable);

        function filterTable() {
            let gradeLevel = document.getElementById('grade-level-filter').value.toLowerCase();
            let status = document.getElementById('status-filter').value.toLowerCase();
            let searchText = document.getElementById('search-input').value.toLowerCase();

            let rows = document.querySelectorAll('#enrollment-table-body tr');

            rows.forEach(row => {
                let gradeLevelCell = row.cells[2].innerText.toLowerCase();
                let statusCell = row.cells[6].innerText.toLowerCase();
                let nameCell = row.cells[1].innerText.toLowerCase();
                let idCell = row.cells[0].innerText.toLowerCase();

                let isGradeLevelMatch = gradeLevel ? gradeLevelCell.includes(gradeLevel) : true;
                let isStatusMatch = status ? statusCell.includes(status) : true;
                let isSearchMatch = searchText ? (nameCell.includes(searchText) || idCell.includes(searchText)) : true;

                if (isGradeLevelMatch && isStatusMatch && isSearchMatch) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }
    </script>
}
