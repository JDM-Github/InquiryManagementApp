@model PaymentsManagementViewModel


<div class="container-fluid mt-4 d-flex gap-3" style="margin-top: 65px !important; margin-bottom: 10px; min-height: 90vh;">
    @await Html.PartialAsync("Layout/Navigation")
    <div class="card shadow-lg border-0 rounded-3 mt-2 w-100">
        <div class="card-header d-flex align-items-center justify-content-between"
            style="border-left: 4px solid #FFD700; background-color: #f8f9fa;">
            <h2 class="mb-0" style="font-size: 1.5rem; font-weight: bold; color: #007bff; padding-left: 15px;">
                TRANSACTION HISTORY</h2>

            <div class="d-flex gap-2 w-50">
                @* <button type="button" class="btn btn-primary w-100" data-bs-toggle="modal"
                    data-bs-target="#paymentScheduleModal">
                    Set Payment Schedule
                </button> *@
                @* @if (Model.IsPaymentDay)
                { *@
                    <button type="button" class="btn btn-success w-100" data-bs-toggle="modal"
                        data-bs-target="#walkInPaymentModal">
                        Walk-in Payment
                    </button>
                @* } *@
            </div>
        </div>

        <div class="card-body">
            <div class="d-flex gap-2">
                <input type="text" class="form-control w-100 mb-2 shadow-sm" id="searchInput" placeholder="Search..."
                    style="border-radius: 5px; font-size: 0.9rem;" value="@Model.SearchFilter"/>
                <button type="button" class="btn btn-primary shadow-sm mb-2"
                    style="font-size: 0.9rem; border-radius: 5px;" onclick="applyFilters()">
                    Search
                </button>
            </div>
            <table class="table table-striped table-bordered table-hover w-100">
                <thead style="background-color: yellow;">
                    <tr style="font-size: 0.9rem !important; ">
                        <th scope="col">DATE</th>
                        <th scope="col">PAYMENT ID</th>
                        <th scope="col">STUDENT LRN</th>
                        <th scope="col">P. AMOUNT</th>
                        <th scope="col">REF NUMBER</th>
                        <th scope="col">P. METHOD</th>
                        <th scope="col">STATUS</th>
                        <th scope="col">ACTIONS</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model == null || !Model.Payments.Any())
                    {
                        <tr>
                            <td colspan="9" class="text-center text-muted">
                                No transactions data available.
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var payment in Model.Payments)
                        {
                            <tr>
                                <td>@payment.Payment.Date.ToShortDateString()</td>
                                <td>@payment.Payment.PaymentId</td>
                                <td>@payment.Enrollees!.LRN</td>
                                <td>@payment.Payment.PaidAmount</td>
                                <td>@payment.Payment.ReferenceNumber</td>
                                <td>@payment.Payment.PaymentMethod</td>
                                <td>@payment.Payment.Status</td>
                                <td>
                                    <button class="btn btn-info btn-sm" data-bs-toggle="modal"
                                        data-bs-target="#details-@payment.Payment.Id">Details</button>
                                </td>
                            </tr>

                            <div class="modal fade" id="details-@payment.Payment.Id" tabindex="-1"
                                aria-labelledby="details-@payment.Payment.Id-Label" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="details-@payment.Payment.Id-Label">Payment Details for
                                                @payment.Payment.PaymentId</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal"
                                                aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <p><strong>Date:</strong> @payment.Payment.Date.ToShortDateString()</p>
                                            <p><strong>Payment ID:</strong> @payment.Payment.PaymentId</p>
                                            <p><strong>Paid Amount:</strong> @payment.Payment.PaidAmount</p>
                                            <p><strong>Reference Number:</strong> @payment.Payment.ReferenceNumber</p>
                                            <p><strong>Payment Method:</strong> @payment.Payment.PaymentMethod</p>
                                            <p><strong>Status:</strong> @payment.Payment.Status</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </tbody>
            </table>

            <div class="d-flex justify-content-center mt-3">
                <ul class="pagination">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link"
                            href="@Url.Action("ManageTransactions", new { page = Model.CurrentPage - 1, search = Model.SearchFilter })">Previous</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link"
                            href="@Url.Action("ManageTransactions", new { page = Model.CurrentPage + 1, search = Model.SearchFilter })">Next</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>
@await Html.PartialAsync("Modal/_SetPaymentModal", PaymentSchedule.CurrentPaymentSchedule)
@await Html.PartialAsync("Modal/_WalkInPayment")
<script>
    function applyFilters() {
        const search = document.getElementById("searchInput").value;
        window.location.href = `@Url.Action("ManageTransactions", "Admin")?search=${search}&page=1`;
    }
</script>
